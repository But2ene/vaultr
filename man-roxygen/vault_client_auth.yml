backends:
  short: >-
    Return a character vector of supported authentication backends.
    If a backend \code{x} is present, then you can access it with
    \code{$auth$x}.  Note that vault calls these authentication
    \emph{methods} but we use \emph{backends} here to differentiate
    with R6 methods.  Note that these are backends supported by
    \code{vaultr} and not necessarily supported by the server - the
    server may not have enabled some of these backends, and may
    support other authentication backends not directly supported by
    vaultr.  See the \code{$list()} method to query what the server
    supports.

list:
  short: >-
    List authentication backends supported by the vault server,
    including information about where these backends are mounted.
  params:
    detailed:
      Logical, indicating if detailed information should be returned

enable:
  short: >-
    Enable an authentication backend in the vault server.
  params:
    type: >-
      The type of authentication backend (e.g., \code{userpass},
      \code{github})
    description: >-
      Human-friendly description of the backend; will be returned by
      \code{$list()}
    local: >-
      Specifies if the auth method is local only. Local auth methods
      are not replicated nor (if a secondary) removed by replication.
    path: >-
      Specifies the path in which to enable the auth method. Defaults
      to be the same as \code{type}.

disable:
  short: >-
    Disable an active authentication backend.
  params:
    path: The path of the authentication backend to disable.

token:
  short: >-
    Interact with vault's token authentication.  See
    \code{\link{vault_client_token}} for more information.

github:
  short: >-
    Interact with vault's GitHub authentication.  See
    \code{\link{vault_client_auth_github}} for more information.

userpass:
  short: >-
    Interact with vault's username/password based authentication.  See
    \code{\link{vault_client_auth_userpass}} for more information.
