% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vault_server_instance.R
\name{vault_server_instance}
\alias{vault_server_instance}
\title{Vault Server Instance}
\description{
Control a vault server instance in a testing environnment.
Objects of this type are returned by
\code{\link{vault_test_server}}.
}
\details{
The server will stay alive for as long as the R process is alive
\emph{or} until the \code{vault_server_instance} object goes out
of scope and is garbage collected.  Calling \code{$kill()} will
explicitly stop the server, but this is not strictly needed.
}
\section{Methods}{


\describe{
\item{\code{addr}}{
  The vault address; this is suitable for using with \code{\link{vault_client}} (read-only).
}
\item{\code{port}}{
  The vault port (read-only).
}
\item{\code{token}}{
  The vault root token, from when the testing vault server was created.  If the vault is rekeyed this will no longer be accurate (read-only).
}
\item{\code{keys}}{
  Key shares from when the vault was initialised (read-only).
}
\item{\code{cacert}}{
  Path to the https certificate, if running in https mode (read-only).
}
\item{\code{version}}{
  Return the server version, as a \code{\link{numeric_version}} object.

  \emph{Usage:}\code{version()}
}
\item{\code{client}}{
  Create a new client that can use this server.  The client will be a \code{\link{vault_client}} object.

  \emph{Usage:}\code{client(login = TRUE, quiet = TRUE)}

  \emph{Arguments:}
  \itemize{
    \item{\code{login}:   Logical, indicating if the client should login to the server (default is \code{TRUE}).
    }

    \item{\code{quiet}:   Logical, indicating if informational messages should be suppressed.  Defau;t is \code{TRUE}, in contrast with most other methods.
    }
  }
}
\item{\code{env}}{
  Return a named character vector of environment variables that can be used to communicate with this vault server (\code{VAULT_ADDR}, \code{VAU:T_TOKEN}, etc).

  \emph{Usage:}\code{env()}
}
\item{\code{export}}{
  Export the variables returned by the \code{$env()} method to the environment.  This makes them available to child processes.

  \emph{Usage:}\code{export()}
}
\item{\code{clear_cached_token}}{
  Clear any session-cached token for this server.  This is intended for testing new authentication backends.

  \emph{Usage:}\code{clear_cached_token()}
}
\item{\code{kill}}{
  Kill the server.

  \emph{Usage:}\code{kill()}
}
}
}

